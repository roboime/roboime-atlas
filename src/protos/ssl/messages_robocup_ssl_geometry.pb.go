// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages_robocup_ssl_geometry.proto

package ssl

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SSL_GeometryFieldSize struct {
	LineWidth                    *int32   `protobuf:"varint,1,opt,name=line_width,json=lineWidth" json:"line_width,omitempty"`
	FieldLength                  *int32   `protobuf:"varint,2,opt,name=field_length,json=fieldLength" json:"field_length,omitempty"`
	FieldWidth                   *int32   `protobuf:"varint,3,opt,name=field_width,json=fieldWidth" json:"field_width,omitempty"`
	BoundaryWidth                *int32   `protobuf:"varint,4,opt,name=boundary_width,json=boundaryWidth" json:"boundary_width,omitempty"`
	RefereeWidth                 *int32   `protobuf:"varint,5,opt,name=referee_width,json=refereeWidth" json:"referee_width,omitempty"`
	GoalWidth                    *int32   `protobuf:"varint,6,opt,name=goal_width,json=goalWidth" json:"goal_width,omitempty"`
	GoalDepth                    *int32   `protobuf:"varint,7,opt,name=goal_depth,json=goalDepth" json:"goal_depth,omitempty"`
	GoalWallWidth                *int32   `protobuf:"varint,8,opt,name=goal_wall_width,json=goalWallWidth" json:"goal_wall_width,omitempty"`
	CenterCircleRadius           *int32   `protobuf:"varint,9,opt,name=center_circle_radius,json=centerCircleRadius" json:"center_circle_radius,omitempty"`
	DefenseRadius                *int32   `protobuf:"varint,10,opt,name=defense_radius,json=defenseRadius" json:"defense_radius,omitempty"`
	DefenseStretch               *int32   `protobuf:"varint,11,opt,name=defense_stretch,json=defenseStretch" json:"defense_stretch,omitempty"`
	FreeKickFromDefenseDist      *int32   `protobuf:"varint,12,opt,name=free_kick_from_defense_dist,json=freeKickFromDefenseDist" json:"free_kick_from_defense_dist,omitempty"`
	PenaltySpotFromFieldLineDist *int32   `protobuf:"varint,13,opt,name=penalty_spot_from_field_line_dist,json=penaltySpotFromFieldLineDist" json:"penalty_spot_from_field_line_dist,omitempty"`
	PenaltyLineFromSpotDist      *int32   `protobuf:"varint,14,opt,name=penalty_line_from_spot_dist,json=penaltyLineFromSpotDist" json:"penalty_line_from_spot_dist,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *SSL_GeometryFieldSize) Reset()         { *m = SSL_GeometryFieldSize{} }
func (m *SSL_GeometryFieldSize) String() string { return proto.CompactTextString(m) }
func (*SSL_GeometryFieldSize) ProtoMessage()    {}
func (*SSL_GeometryFieldSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f8800b4b7eed3c6, []int{0}
}

func (m *SSL_GeometryFieldSize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSL_GeometryFieldSize.Unmarshal(m, b)
}
func (m *SSL_GeometryFieldSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSL_GeometryFieldSize.Marshal(b, m, deterministic)
}
func (m *SSL_GeometryFieldSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSL_GeometryFieldSize.Merge(m, src)
}
func (m *SSL_GeometryFieldSize) XXX_Size() int {
	return xxx_messageInfo_SSL_GeometryFieldSize.Size(m)
}
func (m *SSL_GeometryFieldSize) XXX_DiscardUnknown() {
	xxx_messageInfo_SSL_GeometryFieldSize.DiscardUnknown(m)
}

var xxx_messageInfo_SSL_GeometryFieldSize proto.InternalMessageInfo

func (m *SSL_GeometryFieldSize) GetLineWidth() int32 {
	if m != nil && m.LineWidth != nil {
		return *m.LineWidth
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetFieldLength() int32 {
	if m != nil && m.FieldLength != nil {
		return *m.FieldLength
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetFieldWidth() int32 {
	if m != nil && m.FieldWidth != nil {
		return *m.FieldWidth
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetBoundaryWidth() int32 {
	if m != nil && m.BoundaryWidth != nil {
		return *m.BoundaryWidth
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetRefereeWidth() int32 {
	if m != nil && m.RefereeWidth != nil {
		return *m.RefereeWidth
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetGoalWidth() int32 {
	if m != nil && m.GoalWidth != nil {
		return *m.GoalWidth
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetGoalDepth() int32 {
	if m != nil && m.GoalDepth != nil {
		return *m.GoalDepth
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetGoalWallWidth() int32 {
	if m != nil && m.GoalWallWidth != nil {
		return *m.GoalWallWidth
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetCenterCircleRadius() int32 {
	if m != nil && m.CenterCircleRadius != nil {
		return *m.CenterCircleRadius
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetDefenseRadius() int32 {
	if m != nil && m.DefenseRadius != nil {
		return *m.DefenseRadius
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetDefenseStretch() int32 {
	if m != nil && m.DefenseStretch != nil {
		return *m.DefenseStretch
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetFreeKickFromDefenseDist() int32 {
	if m != nil && m.FreeKickFromDefenseDist != nil {
		return *m.FreeKickFromDefenseDist
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetPenaltySpotFromFieldLineDist() int32 {
	if m != nil && m.PenaltySpotFromFieldLineDist != nil {
		return *m.PenaltySpotFromFieldLineDist
	}
	return 0
}

func (m *SSL_GeometryFieldSize) GetPenaltyLineFromSpotDist() int32 {
	if m != nil && m.PenaltyLineFromSpotDist != nil {
		return *m.PenaltyLineFromSpotDist
	}
	return 0
}

type SSL_GeometryCameraCalibration struct {
	CameraId             *uint32  `protobuf:"varint,1,req,name=camera_id,json=cameraId" json:"camera_id,omitempty"`
	FocalLength          *float32 `protobuf:"fixed32,2,req,name=focal_length,json=focalLength" json:"focal_length,omitempty"`
	PrincipalPointX      *float32 `protobuf:"fixed32,3,req,name=principal_point_x,json=principalPointX" json:"principal_point_x,omitempty"`
	PrincipalPointY      *float32 `protobuf:"fixed32,4,req,name=principal_point_y,json=principalPointY" json:"principal_point_y,omitempty"`
	Distortion           *float32 `protobuf:"fixed32,5,req,name=distortion" json:"distortion,omitempty"`
	Q0                   *float32 `protobuf:"fixed32,6,req,name=q0" json:"q0,omitempty"`
	Q1                   *float32 `protobuf:"fixed32,7,req,name=q1" json:"q1,omitempty"`
	Q2                   *float32 `protobuf:"fixed32,8,req,name=q2" json:"q2,omitempty"`
	Q3                   *float32 `protobuf:"fixed32,9,req,name=q3" json:"q3,omitempty"`
	Tx                   *float32 `protobuf:"fixed32,10,req,name=tx" json:"tx,omitempty"`
	Ty                   *float32 `protobuf:"fixed32,11,req,name=ty" json:"ty,omitempty"`
	Tz                   *float32 `protobuf:"fixed32,12,req,name=tz" json:"tz,omitempty"`
	DerivedCameraWorldTx *float32 `protobuf:"fixed32,13,opt,name=derived_camera_world_tx,json=derivedCameraWorldTx" json:"derived_camera_world_tx,omitempty"`
	DerivedCameraWorldTy *float32 `protobuf:"fixed32,14,opt,name=derived_camera_world_ty,json=derivedCameraWorldTy" json:"derived_camera_world_ty,omitempty"`
	DerivedCameraWorldTz *float32 `protobuf:"fixed32,15,opt,name=derived_camera_world_tz,json=derivedCameraWorldTz" json:"derived_camera_world_tz,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSL_GeometryCameraCalibration) Reset()         { *m = SSL_GeometryCameraCalibration{} }
func (m *SSL_GeometryCameraCalibration) String() string { return proto.CompactTextString(m) }
func (*SSL_GeometryCameraCalibration) ProtoMessage()    {}
func (*SSL_GeometryCameraCalibration) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f8800b4b7eed3c6, []int{1}
}

func (m *SSL_GeometryCameraCalibration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSL_GeometryCameraCalibration.Unmarshal(m, b)
}
func (m *SSL_GeometryCameraCalibration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSL_GeometryCameraCalibration.Marshal(b, m, deterministic)
}
func (m *SSL_GeometryCameraCalibration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSL_GeometryCameraCalibration.Merge(m, src)
}
func (m *SSL_GeometryCameraCalibration) XXX_Size() int {
	return xxx_messageInfo_SSL_GeometryCameraCalibration.Size(m)
}
func (m *SSL_GeometryCameraCalibration) XXX_DiscardUnknown() {
	xxx_messageInfo_SSL_GeometryCameraCalibration.DiscardUnknown(m)
}

var xxx_messageInfo_SSL_GeometryCameraCalibration proto.InternalMessageInfo

func (m *SSL_GeometryCameraCalibration) GetCameraId() uint32 {
	if m != nil && m.CameraId != nil {
		return *m.CameraId
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetFocalLength() float32 {
	if m != nil && m.FocalLength != nil {
		return *m.FocalLength
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetPrincipalPointX() float32 {
	if m != nil && m.PrincipalPointX != nil {
		return *m.PrincipalPointX
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetPrincipalPointY() float32 {
	if m != nil && m.PrincipalPointY != nil {
		return *m.PrincipalPointY
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetDistortion() float32 {
	if m != nil && m.Distortion != nil {
		return *m.Distortion
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetQ0() float32 {
	if m != nil && m.Q0 != nil {
		return *m.Q0
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetQ1() float32 {
	if m != nil && m.Q1 != nil {
		return *m.Q1
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetQ2() float32 {
	if m != nil && m.Q2 != nil {
		return *m.Q2
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetQ3() float32 {
	if m != nil && m.Q3 != nil {
		return *m.Q3
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetTx() float32 {
	if m != nil && m.Tx != nil {
		return *m.Tx
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetTy() float32 {
	if m != nil && m.Ty != nil {
		return *m.Ty
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetTz() float32 {
	if m != nil && m.Tz != nil {
		return *m.Tz
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetDerivedCameraWorldTx() float32 {
	if m != nil && m.DerivedCameraWorldTx != nil {
		return *m.DerivedCameraWorldTx
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetDerivedCameraWorldTy() float32 {
	if m != nil && m.DerivedCameraWorldTy != nil {
		return *m.DerivedCameraWorldTy
	}
	return 0
}

func (m *SSL_GeometryCameraCalibration) GetDerivedCameraWorldTz() float32 {
	if m != nil && m.DerivedCameraWorldTz != nil {
		return *m.DerivedCameraWorldTz
	}
	return 0
}

type SSL_GeometryData struct {
	Field                *SSL_GeometryFieldSize           `protobuf:"bytes,1,req,name=field" json:"field,omitempty"`
	Calib                []*SSL_GeometryCameraCalibration `protobuf:"bytes,2,rep,name=calib" json:"calib,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *SSL_GeometryData) Reset()         { *m = SSL_GeometryData{} }
func (m *SSL_GeometryData) String() string { return proto.CompactTextString(m) }
func (*SSL_GeometryData) ProtoMessage()    {}
func (*SSL_GeometryData) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f8800b4b7eed3c6, []int{2}
}

func (m *SSL_GeometryData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSL_GeometryData.Unmarshal(m, b)
}
func (m *SSL_GeometryData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSL_GeometryData.Marshal(b, m, deterministic)
}
func (m *SSL_GeometryData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSL_GeometryData.Merge(m, src)
}
func (m *SSL_GeometryData) XXX_Size() int {
	return xxx_messageInfo_SSL_GeometryData.Size(m)
}
func (m *SSL_GeometryData) XXX_DiscardUnknown() {
	xxx_messageInfo_SSL_GeometryData.DiscardUnknown(m)
}

var xxx_messageInfo_SSL_GeometryData proto.InternalMessageInfo

func (m *SSL_GeometryData) GetField() *SSL_GeometryFieldSize {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *SSL_GeometryData) GetCalib() []*SSL_GeometryCameraCalibration {
	if m != nil {
		return m.Calib
	}
	return nil
}

func init() {
	proto.RegisterType((*SSL_GeometryFieldSize)(nil), "SSL_GeometryFieldSize")
	proto.RegisterType((*SSL_GeometryCameraCalibration)(nil), "SSL_GeometryCameraCalibration")
	proto.RegisterType((*SSL_GeometryData)(nil), "SSL_GeometryData")
}

func init() {
	proto.RegisterFile("messages_robocup_ssl_geometry.proto", fileDescriptor_5f8800b4b7eed3c6)
}

var fileDescriptor_5f8800b4b7eed3c6 = []byte{
	// 629 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0x5f, 0x4f, 0x13, 0x41,
	0x14, 0xc5, 0xc3, 0x96, 0x02, 0xbd, 0x6d, 0xa9, 0x6e, 0x50, 0x26, 0x41, 0x90, 0x3f, 0x51, 0x1b,
	0x63, 0x08, 0x14, 0x7d, 0xe3, 0x49, 0x1a, 0x88, 0x91, 0x07, 0xb3, 0x35, 0x41, 0x7d, 0x99, 0x0c,
	0xbb, 0xd3, 0x76, 0xc2, 0x74, 0x67, 0x99, 0x19, 0xa0, 0xdb, 0xcf, 0xec, 0x9b, 0x5f, 0xc0, 0xcc,
	0x9d, 0x59, 0xc0, 0xa4, 0xf8, 0x78, 0xce, 0xfd, 0x9d, 0x93, 0xe9, 0xde, 0x9b, 0xc2, 0xde, 0x84,
	0x1b, 0xc3, 0x46, 0xdc, 0x50, 0xad, 0x2e, 0x55, 0x7a, 0x53, 0x50, 0x63, 0x24, 0x1d, 0x71, 0x35,
	0xe1, 0x56, 0x97, 0xfb, 0x85, 0x56, 0x56, 0xed, 0xfe, 0x59, 0x84, 0x17, 0x83, 0xc1, 0x39, 0x3d,
	0x0b, 0xf6, 0xa9, 0xe0, 0x32, 0x1b, 0x88, 0x19, 0x8f, 0x37, 0x01, 0xa4, 0xc8, 0x39, 0xbd, 0x13,
	0x99, 0x1d, 0x93, 0x85, 0xed, 0x85, 0x6e, 0x3d, 0x69, 0x38, 0xe7, 0xc2, 0x19, 0xf1, 0x0e, 0xb4,
	0x86, 0x8e, 0xa5, 0x92, 0xe7, 0x23, 0x3b, 0x26, 0x11, 0x02, 0x4d, 0xf4, 0xce, 0xd1, 0x8a, 0x5f,
	0x83, 0x97, 0xa1, 0xa2, 0x86, 0x04, 0xa0, 0xe5, 0x3b, 0xde, 0xc0, 0xea, 0xa5, 0xba, 0xc9, 0x33,
	0xa6, 0xcb, 0xc0, 0x2c, 0x22, 0xd3, 0xae, 0x5c, 0x8f, 0xed, 0x41, 0x5b, 0xf3, 0x21, 0xd7, 0xbc,
	0x7a, 0x4c, 0x1d, 0xa9, 0x56, 0x30, 0x3d, 0xb4, 0x09, 0x30, 0x52, 0x4c, 0x06, 0x62, 0xc9, 0x3f,
	0xd7, 0x39, 0xff, 0x8e, 0x33, 0x5e, 0xd8, 0x31, 0x59, 0x7e, 0x18, 0xf7, 0x9d, 0x11, 0xbf, 0x85,
	0x8e, 0x4f, 0x33, 0x59, 0x55, 0xac, 0xf8, 0xa7, 0x60, 0x05, 0x93, 0xa1, 0xe6, 0x00, 0xd6, 0x52,
	0x9e, 0x5b, 0xae, 0x69, 0x2a, 0x74, 0x2a, 0x39, 0xd5, 0x2c, 0x13, 0x37, 0x86, 0x34, 0x10, 0x8e,
	0xfd, 0xec, 0x04, 0x47, 0x09, 0x4e, 0xdc, 0x6f, 0xcc, 0xf8, 0x90, 0xe7, 0xe6, 0x9e, 0x05, 0x5f,
	0x1c, 0xdc, 0x80, 0xbd, 0x83, 0x4e, 0x85, 0x19, 0xab, 0xb9, 0x4d, 0xc7, 0xa4, 0x89, 0x5c, 0x95,
	0x1e, 0x78, 0x37, 0x3e, 0x86, 0x8d, 0xa1, 0xfb, 0x12, 0x57, 0x22, 0xbd, 0xa2, 0x43, 0xad, 0x26,
	0xb4, 0xca, 0x65, 0xc2, 0x58, 0xd2, 0xc2, 0xd0, 0xba, 0x43, 0xbe, 0x8a, 0xf4, 0xea, 0x54, 0xab,
	0x49, 0xdf, 0xcf, 0xfb, 0xc2, 0xd8, 0xf8, 0x0c, 0x76, 0x0a, 0x9e, 0x33, 0x69, 0x4b, 0x6a, 0x0a,
	0x65, 0x7d, 0x41, 0xd8, 0xa3, 0x5b, 0x36, 0x76, 0xb4, 0xb1, 0xe3, 0x55, 0x00, 0x07, 0x85, 0xb2,
	0xae, 0x06, 0x2f, 0xe3, 0x5c, 0xe4, 0xbe, 0xe8, 0x18, 0x36, 0xaa, 0x22, 0x0c, 0x62, 0x11, 0x56,
	0x62, 0xc5, 0xaa, 0x7f, 0x46, 0x40, 0x5c, 0xca, 0x55, 0xb8, 0x2a, 0x97, 0xde, 0xfd, 0x5d, 0x83,
	0xcd, 0xc7, 0x57, 0x77, 0xc2, 0x26, 0x5c, 0xb3, 0x13, 0x26, 0xc5, 0xa5, 0x66, 0x56, 0xa8, 0x3c,
	0xde, 0x80, 0x46, 0x8a, 0x26, 0x15, 0x19, 0x59, 0xd8, 0x8e, 0xba, 0xed, 0x64, 0xc5, 0x1b, 0x5f,
	0x32, 0xbc, 0x3d, 0x95, 0x32, 0xf9, 0x70, 0x7b, 0x51, 0x37, 0x4a, 0x9a, 0xe8, 0x85, 0xdb, 0x7b,
	0x0f, 0xcf, 0x0b, 0x2d, 0xf2, 0x54, 0x14, 0x4c, 0xd2, 0x42, 0x89, 0xdc, 0xd2, 0x29, 0xa9, 0x21,
	0xd7, 0xb9, 0x1f, 0x7c, 0x73, 0xfe, 0x8f, 0x79, 0x6c, 0x49, 0x16, 0xe7, 0xb1, 0x3f, 0xe3, 0x2d,
	0x00, 0xf7, 0x03, 0x95, 0x76, 0xaf, 0x24, 0x75, 0x84, 0x1e, 0x39, 0xf1, 0x2a, 0x44, 0xd7, 0x07,
	0x64, 0x09, 0xfd, 0xe8, 0xfa, 0x00, 0xf5, 0x21, 0x59, 0x0e, 0xfa, 0x10, 0x75, 0x8f, 0xac, 0x04,
	0xdd, 0x43, 0x7d, 0x44, 0x1a, 0x41, 0x1f, 0x39, 0x6d, 0xa7, 0x04, 0xbc, 0xb6, 0x53, 0xd4, 0x25,
	0x69, 0x06, 0x5d, 0xa2, 0x9e, 0x91, 0x56, 0xd0, 0xb3, 0xf8, 0x13, 0xac, 0x67, 0x5c, 0x8b, 0x5b,
	0x9e, 0xd1, 0xf0, 0xbd, 0xee, 0x94, 0x96, 0x19, 0xb5, 0x53, 0x5c, 0x63, 0x94, 0xac, 0x85, 0xb1,
	0xff, 0xc4, 0x17, 0x6e, 0xf8, 0x7d, 0xfa, 0x74, 0xac, 0xc4, 0xd5, 0xcd, 0x8f, 0x95, 0x4f, 0xc7,
	0x66, 0xa4, 0xf3, 0x64, 0x6c, 0xb6, 0x7b, 0x0b, 0xcf, 0x1e, 0x6f, 0xbb, 0xcf, 0x2c, 0x8b, 0x3f,
	0x40, 0x1d, 0xef, 0x0e, 0x97, 0xdb, 0xec, 0xbd, 0xdc, 0x9f, 0xfb, 0x2f, 0x94, 0x78, 0x28, 0xfe,
	0x08, 0xf5, 0xd4, 0x5d, 0x07, 0x89, 0xb6, 0x6b, 0xdd, 0x66, 0x6f, 0x6b, 0xff, 0xbf, 0xd7, 0x93,
	0x78, 0xf8, 0x73, 0xfd, 0x57, 0xcd, 0x18, 0xf9, 0x37, 0x00, 0x00, 0xff, 0xff, 0x42, 0xb4, 0x9d,
	0xca, 0x09, 0x05, 0x00, 0x00,
}
